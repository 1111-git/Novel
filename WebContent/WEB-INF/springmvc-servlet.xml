<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 启用自动扫描 -->
	<context:component-scan base-package="com.action"></context:component-scan>
	<!-- 启用springmvc相关Annotation的处理器 -->
	<mvc:annotation-driven />

	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />
	<!--proxy-target-class="true"强制使用cglib代理 如果为false则spring会自动选择 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 配置dbcp数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.gjt.mm.mysql.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/reading?useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<!-- 队列中的最小等待数 -->
		<property name="minIdle" value="1"></property>
		<!-- 队列中的最大等待数 -->
		<property name="maxIdle" value="5"></property>
		<!-- 最长等待时间，单位毫秒 -->
		<property name="maxWait" value="3000"></property>
		<!-- 最大活跃数 -->
		<property name="maxActive" value="5"></property>
		<property name="initialSize" value="3"></property>
	</bean>

	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>

	<!-- AdminAction 注入DAO -->
	<bean id="indexAction" name="indexAction" class="com.action.IndexAction">
		<property name="articleDAO" ref="articleDAO"></property>
		<property name="usersDAO" ref="usersDAO"></property>
		<property name="cateDAO" ref="cateDAO"></property>
		<property name="favDAO" ref="favDAO"></property>
		<property name="novelDAO" ref="novelDAO"></property>
		<property name="sectionsDAO" ref="sectionsDAO"></property>
		<property name="topicDAO" ref="topicDAO"></property>
	</bean>

	<!-- 上传文件Action -->
	<bean id="uploadAction" name="uploadAction" class="com.action.UploadAction"></bean>

	<!-- 业务Action -->
	<!-- 定义AdminDAO并注入sqlSessionTemplate的实例 -->
	<bean id="adminDAO" name="adminDAO" class="com.dao.AdminDAO">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- AdminAction 注入DAO -->
	<bean id="adminAction" name="adminAction" class="com.action.AdminAction">
		<property name="adminDAO" ref="adminDAO"></property>
	</bean>

	<!-- 定义UsersDAO并注入sqlSessionTemplate的实例 -->
	<bean id="usersDAO" name="usersDAO" class="com.dao.UsersDAO">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- UsersAction 注入DAO -->
	<bean id="usersAction" name="usersAction" class="com.action.UsersAction">
		<property name="usersDAO" ref="usersDAO"></property>
	</bean>

	<!-- 定义ArticleDAO并注入sqlSessionTemplate的实例 -->
	<bean id="articleDAO" name="articleDAO" class="com.dao.ArticleDAO">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- ArticleAction 注入DAO -->
	<bean id="articleAction" name="articleAction" class="com.action.ArticleAction">
		<property name="articleDAO" ref="articleDAO"></property>
	</bean>

	<!-- 定义CateDAO并注入sqlSessionTemplate的实例 -->
	<bean id="cateDAO" name="cateDAO" class="com.dao.CateDAO">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- CateAction 注入DAO -->
	<bean id="cateAction" name="cateAction" class="com.action.CateAction">
		<property name="cateDAO" ref="cateDAO"></property>
	</bean>

	<!-- 定义NovelDAO并注入sqlSessionTemplate的实例 -->
	<bean id="novelDAO" name="novelDAO" class="com.dao.NovelDAO">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- NovelAction 注入DAO -->
	<bean id="novelAction" name="novelAction" class="com.action.NovelAction">
		<property name="novelDAO" ref="novelDAO"></property>
		<property name="cateDAO" ref="cateDAO"></property>
	</bean>

	<!-- 定义SectionsDAO并注入sqlSessionTemplate的实例 -->
	<bean id="sectionsDAO" name="sectionsDAO" class="com.dao.SectionsDAO">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- SectionsAction 注入DAO -->
	<bean id="sectionsAction" name="sectionsAction" class="com.action.SectionsAction">
		<property name="sectionsDAO" ref="sectionsDAO"></property>
		<property name="novelDAO" ref="novelDAO"></property>
	</bean>

	<!-- 定义FavDAO并注入sqlSessionTemplate的实例 -->
	<bean id="favDAO" name="favDAO" class="com.dao.FavDAO">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- FavAction 注入DAO -->
	<bean id="favAction" name="favAction" class="com.action.FavAction">
		<property name="favDAO" ref="favDAO"></property>
		<property name="usersDAO" ref="usersDAO"></property>
		<property name="novelDAO" ref="novelDAO"></property>
	</bean>

	<!-- 定义TopicDAO并注入sqlSessionTemplate的实例 -->
	<bean id="topicDAO" name="topicDAO" class="com.dao.TopicDAO">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean>
	<!-- TopicAction 注入DAO -->
	<bean id="topicAction" name="topicAction" class="com.action.TopicAction">
		<property name="topicDAO" ref="topicDAO"></property>
		<property name="usersDAO" ref="usersDAO"></property>
		<property name="novelDAO" ref="novelDAO"></property>
	</bean>

</beans>
